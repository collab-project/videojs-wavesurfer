name: videojs-wavesurfer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        node-version:
          - 20
        architecture:
          - x64
      name: Node ${{ matrix.node_version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
      steps:
        - uses: actions/checkout@v4
        - name: Update system
          run: sudo apt-get update
        - name: Install system dependencies
          shell: bash
          run: |
               if [ "$RUNNER_OS" == "Linux" ]; then
                   sudo apt-get install -y ubuntu-restricted-addons chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi
               else
                   echo "$RUNNER_OS not supported"
                   exit 1
               fi
        - name: Using Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.node-version }}
            architecture: ${{ matrix.architecture }}
        - name: Get npm cache directory
          id: npm-cache-dir
          shell: bash
          run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        - name: Cache Node.js modules
          uses: actions/cache@v4
          id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
          with:
            path: ${{ steps.npm-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
        - name: Install Node.js modules
          run: npm install
        - name: Build
          run: npm run build
        - name: Test
          run: npm run test
        - name: Coveralls
          if: runner.os == 'Linux'
          uses: coverallsapp/github-action@v2
          with:
            path-to-lcov: ${{ github.workspace }}/coverage/lcov/lcov.info
            github-token: ${{ secrets.GITHUB_TOKEN }}
        - name: Documentation
          run: npm run docs
